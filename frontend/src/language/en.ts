import { LanguageStrings } from "./language";

export const en: LanguageStrings = {
  common: {
    cancel: "Cancel",
    save: "Save",
    create: "Create",
    add: "Add",
    confirm: "Confirm",
    close: "Close",
    delete: "Delete",
    edit: "Edit",
    done: "Done",
    setupLater: "Set up later",
  },
  characterModal: {
    memoryPlaceholder: "Enter something to remember...",
    noStickers: "No stickers yet.",
    editStickerName: "Edit Name",
    deleteSticker: "Delete",
    addContact: "Add Contact",
    editContact: "Edit Contact",
    editModeTitle: "Edit '{{name}}'",
    profileImage: "Profile Image",
    importContact: "Import Contact",
    shareContact: "Share Contact",
    nameLabel: "Name",
    namePlaceholder: "Enter a name",
    promptLabel: "Persona",
    promptPlaceholder:
      "Describe the character, background, relationships, memories, etc.",
    proactiveToggle: "Allow Proactive Messages",
    advancedSettings: "Advanced Settings",
    sticker: "Stickers",
    addSticker: "Add<br>Sticker",
    deselect: "Deselect",
    selectMode: "Select<br>Mode",
    selectAll: "Select<br>All",
    deleteSelected: 'Delete<br>(<span id="selected-count">0</span>)',
    stickerSupport:
      "Supports jpg, gif, png, bmp, webp, webm, mp4, mp3 (max 30MB each)",
    stickerCount: "Stickers: {{count}}",
    totalStorage: "Total storage usage: ",
    totalSize: "Total size: ",
    memory: "Memory",
    addMemory: "Add Memory",
    responseSpeed: "Message Responsiveness",
    openSNS: "Open SNS",
  },
  characterModalSlider: {
    responseTime: {
      description: "How quickly do they check your messages?",
      low: "Almost instantly",
      high: "You have to call them",
    },
    thinkingTime: {
      description: "How deeply do they think when sending a message?",
      low: "Lost in thought",
      high: "Sends a message and then thinks",
    },
    reactivity: {
      description: "How do they react to the chat?",
      low: "Active JK gal",
      high: "Blunt",
    },
    tone: {
      description: "What kind of tone do they use when chatting with you?",
      low: "Polite and courteous",
      high: "Rude",
    },
  },
  confirm: {
    cancel: "Cancel",
    confirm: "Confirm",
    resetDataConfirm: "Are you sure you want to reset all data?",
    resetDataWarning: "⚠️ The following data will be permanently deleted:",
    resetDataCannotUndo: "This action cannot be undone!",
    resetDataDoubleConfirm: "Are you sure you want to delete all data?",
    resetDataBackupWarning: "If you haven't backed up, you will lose all data.",
    resetDataFinalConfirm:
      "Final confirmation: Do you want to delete all data?",
    resetDataComplete: "All data has been reset. The page will refresh.",
    resetDataFailed: "Failed to reset data: ",
    restoreSnapshotConfirm:
      "Are you sure you want to restore this snapshot? Current settings will be overwritten.",
    deleteSnapshotConfirm:
      "Are you sure you want to delete this snapshot? This action cannot be undone.",
  },
  mainChat: {
    uploadPhoto: "Upload Photo",
    addCaption: "Add a caption...",
    stickerMessagePlaceholder: "Message with sticker (optional)...",
    messagePlaceholder: "Enter a message...",
    stickerLabel: "Sticker: ",
    personaStickers: "Persona Stickers",
    addSticker: "Add Sticker",
    addStickerPrompt: "Add a sticker",
    addStickerButton: "Add Sticker",
    deletedSticker: "[Deleted Sticker: ",
    audio: "Audio",
    sticker: "Sticker",
    selectCharacter: "Select a character",
    selectCharacterPrompt:
      "Select a character from the sidebar to start messaging<br/>Or invite a new character",
    stickerSupport: "Supports jpg, gif, png, bmp, webp (max 30MB each)",
    stickerCount: "Stickers: {{count}}",
    totalSize: "Total size: {{size}}",
    audioSticker: "Audio",
    participantsConnected: "{{count}} connected",
    participantsJoined: "{{count}} participants",
    debugLogButtonTitle: "View debug logs",
    regenerateMessage: "Regenerate message",
    generateSNS: "Generate SNS post",
    generateNAI: "Generate NAI sticker",
  },
  promptModal: {
    title: "Edit Prompts",
    mainChatPrompt: "Main Chat Prompt",
    systemRules: "# System Rules",
    roleAndObjective: "# AI Role and Objective",
    memoryGeneration: "## Memory Generation",
    characterActing: "## Character Acting",
    messageWriting: "## Message Writing Style",
    language: "## Language",
    additionalInstructions: "## Additional Instructions",
    stickerUsage: "## Sticker Usage",
    groupChatContext: "## Group Chat Context",
    openChatContext: "## Open Chat Context",
    resetToDefault: "Reset to Default",
    randomFirstMessagePrompt:
      "Random First Message Character Generation Prompt",
    profileCreationRules: "# Profile Creation Rules",
    characterSheetGenerationRules: "# Character Sheet Generation Rules",
    backupPrompts: "Backup Prompts",
    restorePrompts: "Restore Prompts",
    characterSheetGenerationPrompt: "AI Character Sheet Generation Prompt",
    characterSheetGenerationPromptDescription:
      "This prompt is used when generating a new character sheet.",
    mainChatPromptDescription:
      "This prompt is used in main chat conversations. It will guide the AI's behavior and response style.",
    randomFirstMessagePromptDescription:
      "This prompt is used when generating a new first message.",
    snsForcePrompt: "SNS Force Generation Prompt",
    snsForcePromptDescription: "This prompt is used to forcibly generate SNS posts. It creates character SNS posts based on recent conversation content.",
    naiStickerPrompt: "NAI Sticker Generation Prompt",
    naiStickerPromptDescription: "This prompt is used to generate stickers through NovelAI. It analyzes emotions and situations appropriate to the conversation context to create sticker generation requests.",
    groupChatPrompt: "Group Chat Prompt",
    groupChatPromptDescription: "This prompt is used when AI characters chat in group chats. Should be written in ChatML format.",
    openChatPrompt: "Open Chat Prompt", 
    openChatPromptDescription: "This prompt is used when AI characters chat in open chats. Should be written in ChatML format.",
    resetAllPrompts: "Reset All Prompts",
    resetAllPromptsConfirmation:
      "Are you really sure you want to reset all prompts? This action cannot be undone.",
    restoreFailed: "Failed to restore prompts: ",
  },
  settings: {
    restore: "Restore",
    delete: "Delete",
    noSnapshots: "No saved snapshots.",
    title: "Settings",
    aiSettings: "AI Settings",
    scaleSettings: "Scale Settings",
    advancedSettings: "Advanced Settings",
    apiKey: "API Key",
    apiKeyPlaceholder: "Enter your API key",
    aiModel: "AI Model",
    aiProvider: "AI Provider",
    scale: "Scale",
    uiSize: "UI Size",
    interfaceSize: "Interface Size",
    uiScale: "UI Scale",
    uiScaleInfo:
      "Adjusting UI size will change the size of text, buttons, and icons.",
    small: "Small",
    large: "Large",
    defaultSize: "Default",
    yourPersona: "Your Persona",
    yourName: "What should I call you?",
    yourNamePlaceholder: "Enter your name or nickname",
    yourDescription: "Who are you?",
    yourDescriptionPlaceholder: "Tell me about yourself",
    nameOrNickname: "Name or Nickname",
    nameOrNicknameInfo: "The name AI will use to call you.",
    selfIntroduction: "Self Introduction",
    selfIntroductionPlaceholder:
      "Tell AI about yourself\nExample: Developer, student, hobbies, etc.",
    selfIntroductionInfo: "Helps AI have conversations that suit you better.",
    proactiveSettings: "Proactive Message Settings",
    proactiveChat: "Enable proactive messages for contacts",
    proactiveChatInfo: "Existing characters can start conversations first.",
    randomFirstMessage: "Enable random first messages",
    randomFirstMessageInfo:
      "AI automatically creates new characters and starts conversations.",
    autoMessageSettings: "Auto Message Settings",
    characterCount: "Number of characters to create",
    characterCountUnit: " characters",
    messageFrequency: "Message frequency (in minutes)",
    messageFrequencyInfo:
      "New characters will randomly start conversations within the set time range.",
    minInterval: "Min Interval",
    maxInterval: "Max Interval",
    min: "Min",
    max: "Max",
    snapshots: "Settings Snapshots",
    enableSnapshots: "Enable Snapshots",
    autoSnapshots: "Enable Auto Snapshots",
    autoSnapshotsInfo: "Automatically create snapshots when settings change.",
    savedSnapshots: "Saved Snapshots",
    scrollToSeeMore: "Scroll to see more",
    dataManagement: "Data Management",
    backup: "Backup",
    backupData: "Backup All Data",
    restoreData: "Restore from Backup",
    backupInfo:
      "Includes character info, chat history, user settings, and prompt settings.",
    backupInfoTitle: "Backup File Contents",
    promptBackup: "Backup Prompts",
    promptRestore: "Restore Prompts",
    promptBackupInfo:
      "You can backup and restore custom prompt settings separately.",
    dangerZone: "Danger Zone",
    resetAllData: "Reset All Data",
    resetAllDataInfo: "The following data will be permanently deleted:",
    resetWarning: "⚠️ This action cannot be undone!",
    language: "Language",
    languageEnglish: "English",
    languageKorean: "Korean",
    languageInfo: "The page will refresh when language is changed.",
    themeSettings: "Theme Settings",
    darkTheme: "Dark Theme",
    currentTheme: "Currently applied theme",
    themeComingSoon:
      "Light theme and custom themes will be supported in future updates.",
    animationSettings: "Animation and Effects",
    animationComingSoon:
      "Animation settings will be supported in future updates.",
    debugSettings: "Debug and Developer Options",
    debugLogs: "Debug Logs",
    enableDebugLogs: "Enable Debug Logs",
    debugLogsInfo:
      "Collects detailed logs of AI response processes. May affect performance.",
    currentLogCount: "Current Log Count",
    viewLogs: "View Logs",
    clearLogs: "Clear Logs",
    performanceOptimization: "Performance Optimization",
    performanceComingSoon:
      "Performance optimization options will be supported in future updates.",
    experimentalFeatures: "Experimental Features",
    useNewInputBar: "New Input Bar Design",
    useNewInputBarDesc: "Uses a rounded, floating input bar design.",
    experimentalWarning:
      "Experimental features may be unstable and cause unexpected behavior.",
    warningNote: "Warning",
    experimentalComingSoon:
      "Experimental features will be added in future updates.",
    applicationInfo: "Application Information",
    appName: "App Name",
    uiMode: "UI Mode",
    browser: "Browser",
    screenResolution: "Screen Resolution",
    providerSettings: "Configuration",
    promptManagement: "Prompt Management",
    promptInfo: "You can configure AI behavior and response style.",
    editPrompt: "Edit Prompts",
    model: "Model",
    customModel: "Enter custom model name",
    addModel: "Add",
    customModels: "Custom Models",
    maxTokens: "Max Tokens",
    temperature: "Creativity (Temperature)",
    conservativeTemp: "Conservative",
    creativeTemp: "Creative",
    profileGenerationSettings: "Profile Generation Settings",
    profileMaxTokens: "Profile Max Tokens",
    profileTemperature: "Profile Creativity",
    consistentProfile: "Consistent",
    diverseProfile: "Diverse",
    cancel: "Cancel",
    done: "Done",
    settingsCategories: "Settings Categories",
    appearanceSettings: "Appearance",
    characterDefaults: "Character Defaults",
    apiDescription: "API key and model settings",
    appearanceDescription: "UI size and theme",
    characterDescription: "Persona and auto messages",
    dataDescription: "Backup, restore and reset",
    advancedDescription: "Debug and experimental features",
    apiSubtitle: "Configure AI providers and models",
    appearanceSubtitle: "Adjust UI size and theme",
    characterSubtitle: "Set user persona and auto messages",
    dataSubtitle: "Manage backup, restore and data reset",
    advancedSubtitle: "Configure debug and experimental features",
    autoSaveInfo: "Settings are automatically saved",
    close: "Close",
    saveAndClose: "Save & Close",
    settingsDescription: "Manage application settings",
    resetDataList: {
      allCharacters: "All character information",
      allChatHistory: "All chat history",
      userSettings: "User settings (including API keys)",
      stickerData: "Sticker data",
      debugLogs: "Debug logs",
    },
    uiSizePreviewMessage1: "Hello! I'll help you adjust the UI size.",
    uiSizePreviewMessage2: "Yes, the preview is nice!",
  },
  sidebar: {
    startNewChat: "Start a new chat",
    imageSent: "Image sent",
    newChatRoom: "New Chat Room",
    unknownCharacter: "Unknown Character",
    chatRoomCount: " chat rooms",
    startChatting: "Start chatting",
    stickerSent: "Sticker sent",
    rename: "Rename",
    deleteChatRoom: "Delete Chat Room",
    title: "ArisuTalk",
    description: "Invite/talk to your characters",
    searchPlaceholder: "Search...",
    invite: "Invite",
  },
  defaultCharacter: {
    name: "Han Seoyeon",
  },
  modal: {
    noSpaceError: {
      title: "Not enough space",
      message:
        "The browser's storage is full. Please delete old conversations or back up and reset your data.",
    },
    saveFailed: {
      title: "Save Failed",
      message: "Failed to save data. Please clear your browser cache.",
    },
    localStorageSaveError: {
      title: "Save Error",
      message: "An error occurred while saving data.",
    },
    promptSaveComplete: {
      title: "Save Complete",
      message: "The prompt has been saved successfully.",
    },
    characterNameDescriptionNotFulfilled: {
      title: "Input Error",
      message: "Character name and prompt cannot be empty.",
    },
    characterDeleteConfirm: {
      title: "Delete Character",
      message:
        "Are you sure you want to delete this character? The conversation will also be deleted.",
    },
    imageFileSizeExceeded: {
      title: "File Size Exceeded",
      message: "Image file cannot exceed 5MB.",
    },
    imageProcessingError: {
      title: "Image Error",
      message: "An error occurred while processing the image.",
    },
    apiKeyRequired: {
      title: "API Key Required",
      message:
        "API key is not set. Please enter your API key in the settings menu.",
    },
    messageGroupDeleteConfirm: {
      title: "Delete Message Group",
      message: "Are you sure you want to delete this message group?",
    },
    messageEmptyError: {
      title: "Error",
      message: "Message content cannot be empty.",
    },
    imageTooSmallOrCharacterInfoTooLong: {
      title: "Save Error",
      message:
        "The image is too small or the character information is too long.",
    },
    characterCardNoNameError: {
      title: "Save Error",
      message: "A name is required to save the character card.",
    },
    characterCardNoAvatarImageError: {
      title: "Save Error",
      message: "A profile picture is required to save the character card.",
    },
    avatarImageLoadError: {
      title: "Error",
      message: "Could not load avatar image.",
    },
    avatarLoadSuccess: {
      title: "Load Success",
      message: "Character card information loaded successfully.",
    },
    characterCardNoAvatarImageInfo: {
      title: "No Information",
      message: "This is a normal image file. Set as profile picture.",
    },
    backupComplete: {
      title: "Backup Complete",
      message: "Data has been backed up successfully.",
    },
    backupFailed: {
      title: "Backup Failed",
      message: "An error occurred while backing up data.",
    },
    restoreFailed: {
      title: "Restore Failed",
      message:
        "The backup file is invalid or an error occurred while reading it.",
    },
    restoreConfirm: {
      title: "Restore Data",
      message:
        "Restoring from a backup file will overwrite all current data. Do you want to continue?",
    },
    restoreComplete: {
      title: "Restore Complete",
      message: "Data has been restored successfully. The app will now reload.",
    },
    promptBackupComplete: {
      title: "Prompt Backup Complete",
      message: "The prompt has been backed up successfully.",
    },
    promptBackupFailed: {
      title: "Backup Failed",
      message: "An error occurred while backing up the prompt.",
    },
    promptRestoreConfirm: {
      title: "Restore Prompt",
      message:
        "This will overwrite the current prompt content. You must press the save button to apply the changes. Do you want to continue?",
    },
    promptRestoreFailed: {
      title: "Prompt Restore Failed",
      message:
        "The prompt backup file is invalid or an error occurred while reading it.",
    },
    promptRestoreComplete: {
      title: "Prompt Restore Complete",
      message: "The prompt has been restored successfully.",
    },
    cancelChanges: {
      title: "Cancel Changes",
      message: "There are unsaved changes. Are you sure you want to cancel?",
    },
    loadFailed: {
      title: "Load Failed",
    },
    deleteChatRoom: {
      title: "Delete Chat Room",
      message:
        "This chat room and all its messages will be deleted. Do you want to continue?",
    },
    editStickerName: {
      title: "Edit Sticker Name",
    },
    unsupportedFileType: {
      message: " is not a supported file type.",
    },
    fileTooLarge: {
      title: "File Size Exceeded",
      message: " is too large. (Max 30MB)",
    },
    fileProcessingError: {
      title: "File Processing Error",
      message: "An error occurred while processing the file.",
    },
    stickerProcessingError: {
      title: "Sticker Processing Error",
      message: "An error occurred while processing ",
    },
    cannotGenerateRandomCharacter: {
      message: "Cannot generate random character: User persona is not set.",
    },
    failedToGenerateProfile: {
      message: "Failed to generate profile:",
    },
    invalidProfileName: {
      message: "Generated profile has invalid or empty name:",
    },
    invalidProfilePrompt: {
      message: "Generated profile has invalid or empty prompt:",
    },
    failedToGetFirstMessage: {
      message: "Failed to get first message from API:",
    },
    invalidFirstMessage: {
      message: "API did not return valid first messages:",
    },
    failedToGenerateRandomCharacter: {
      message: "Failed to generate and initiate single random character:",
    },
    resetPromptTitle: "Reset Prompt",
    resetPromptMessage:
      'Do you want to reset "{{promptName}}" to default values?\nAll current settings will be lost.',
    resetPromptCompleteTitle: "Reset Complete",
    resetPromptCompleteMessage:
      '"{{promptName}}" has been reset to default values.',
    selectChat: {
      message: "Select a chat room to continue the conversation.",
      newChat: "New Chat",
    },
    characterCardSaveError: {
      message: "Failed to save character card.",
    },
    character_name_required_title: "Name required",
    character_name_required_message: "Please enter a character name first.",
    aiGenerationComplete: {
      title: "AI Generation Complete",
      message:
        'Successfully generated details for character "{{characterName}}"',
    },
    generationFailed: {
      title: "Generation Failed",
      message:
        "An error occurred during character generation: {{errorMessage}}",
    },
  },
  ui: {
    discardChanges: "Discard Changes",
    unsavedChangesWarning:
      "There are unsaved changes. Are you sure you want to cancel?",
    appStarted: "ArisuTalk application has started.",
    dataLoadFailed: "Data load failed:",
    defaultChatName: "Default Chat",
    newChatName: "New Chat",
    deleteChatRoom: "Delete Chat Room",
    deleteChatRoomConfirm:
      "This chat room and all messages will be deleted. Continue?",
    startConversation: "Start a conversation",
    imageSent: "Image sent",
    stickerSent: "Sticker sent",
    enterStickerName: "Enter sticker name:",
    fileProcessingError: "File processing error:",
    fileProcessingAlert: "An error occurred while processing the file.",
    fileSizeExceeded: "File Size Exceeded",
    fileSizeExceededMessage: "'{{fileName}}' is too large. (Max {{sizeLimit}})",
    unsupportedFormat: "Unsupported Format",
    unsupportedFormatMessage: "'{{fileName}}' is not a supported file format.",
    stickerProcessingError: "Sticker Processing Error",
    stickerProcessingErrorConsole: "Sticker processing error: {{fileName}}",
    stickerProcessingErrorMessage:
      "An error occurred while processing '{{fileName}}'.",
    storageFull: "Storage Full",
    storageFullMessage: "Not enough storage space.",
    groupChatNamePlaceholder: "Enter group chat name",
    openChatNamePlaceholder: "Enter open chat name",
    newGroupChat: "New Group Chat",
    newOpenChat: "New Open Chat",
    edit: "Edit",
    delete: "Delete",
    apiKeyPlaceholder: "Enter API key",
    customModelPlaceholder: "Enter custom model name",
    generate: "Generate",
  },
  chat: {
    defaultChatName: "Default Chat",
    newChat: "New Chat",
    randomChatName: "Random Chat",
    startNewChat: "Start a new chat.",
    imageSent: "Image sent.",
    messageGenerationError: "Failed to generate message.",
  },
  groupChat: {
    groupChat: "Group Chat",
    openChat: "Open Chat",
    createGroupChat: "Create Group Chat",
    createOpenChat: "Create Open Chat",
    groupChatName: "Group Chat Name",
    openChatName: "Open Chat Name",
    openChatNamePlaceholder: "Enter open chat name",
    groupChatSettings: "Group Chat Settings",
    openChatInfo: "What is Open Chat?",
    newGroupChat: "New Group Chat",
    newOpenChat: "New Open Chat",
    calculatingStorage: "Calculating...",
    responseSettings: "Response Settings",
    overallResponseFrequency: "Overall Response Frequency",
    responseFrequencyInfo:
      "Higher values make characters respond more frequently",
    maxSimultaneousResponders: "Max Simultaneous Responders",
    responseInterval: "Response Interval",
    responseIntervalInfo: "Delay time between character responses",
    individualCharacterSettings: "Individual Character Settings",
    responseEnabled: "Response Enabled",
    individualResponseProbability: "Individual Response Probability",
    characterRole: "Character Role",
    roleNormal: "Normal",
    roleLeader: "Leader",
    roleQuiet: "Quiet",
    roleActive: "Active",
    cancel: "Cancel",
    save: "Save",
    create: "Create",
    edit: "Edit",
    delete: "Delete",
    people1: "1 person",
    people2: "2 people",
    people3: "3 people",
    people4: "4 people",
    seconds: "sec",
    selectParticipants: "Select Participating Characters",
    minimumParticipants: "You must select at least 2 characters.",
    participantsCount: " participants",
    participantsConnected: " connected",
    startConversation: "Start a conversation",
    imageSent: "Image sent",
    stickerSent: "Sticker sent",
    openChatAutoManagement: "AI automatically manages character entry and exit",
    charactersMoodBased: "Characters participate based on their mood and state",
    naturalConversation: "Natural conversation flow is automatically created",
    initialParticipants: "Initially, 2-4 characters randomly enter",
    deleteGroupChatTitle: "Delete Group Chat",
    deleteGroupChatMessage:
      "Are you sure you want to delete this group chat? All conversation history will be lost.",
    deleteOpenChatTitle: "Delete Open Chat",
    deleteOpenChatMessage:
      "Are you sure you want to delete this open chat? All conversation history will be lost.",
    groupChatNameRequired: "Group Chat Name Required",
    groupChatNameRequiredMessage: "Please enter a group chat name.",
    participantsRequired: "Insufficient Participants",
    participantsRequiredMessage: "Please select at least 2 characters.",
    openChatNameRequired: "Open Chat Name Required",
    openChatNameRequiredMessage: "Please enter an open chat name.",
    noCharactersAvailable: "No Characters",
    noCharactersAvailableMessage:
      "No characters available to participate. Please add characters first.",
  },
  debugLogs: {
    systemDebugLogs: "System Debug Logs",
    groupChatType: "Group Chat",
    openChatType: "Open Chat",
    normalChatType: "Normal Chat",
    totalLogItems: "Total",
    maxLogItems: "log items",
    logCollectionStatus: "Log Collection:",
    enabled: "Enabled",
    disabled: "Disabled",
    chatRoom: "Chat Room",
    api: "API",
    model: "Model",
    export: "Export",
    clearAll: "Clear All",
    close: "Close",
    noLogs: "No logs",
    noLogsCollected:
      "No logs collected yet.<br/>Logs will be generated when you start chatting.",
    logsDisabled:
      'Log collection is disabled.<br/>Please enable "Debug Logs" in settings.',
    unknown: "Unknown",
    invalidDate: "Invalid Date",
  },
  api: {
    imageMessage: "Image sent.",
    imageUnavailable: "(User sent an image but it is no longer available)",
    unknownSticker: "Unknown Sticker",
    stickerMessage: '[User sent "{{stickerName}}" sticker]',
    proactiveStart:
      "(SYSTEM: You are starting this conversation. Please begin.)",
    apiError: "{{provider}} API error: {{status}} - {{error}}",
    invalidResponse: "Did not receive valid response from {{provider}} API.",
    requestFailed: "API request failed: {{status}}",
    profileParseError: "Cannot parse profile response as JSON.",
    unknownReason: "unknown reason",
    profileNotGenerated: "Profile was not generated. (reason: {{reason}})",
    profileGenerationError: "{{provider}} profile generation API call error:",
    userNameLabel: "User name:",
    userDescriptionLabel: "User description:",
    geminiParsingError: "Response parsing failed: {{error}}",
    geminiResponseEmpty: "No response was generated. (reason: {{reason}})",
    geminiLocationNotSupported:
      "Sorry, Gemini API is not supported in your current country.",
    geminiProcessingError:
      "An error occurred while processing response: {{error}}",
    apiKeyNotFound:
      "API key not found. Please check your API key in the settings.",
  },
  system: {
    languageChangeMessage:
      "Language has been changed. The page will be refreshed.",
    storageFullTitle: "Storage Full",
    storageFullMessage: "Not enough storage space.",
    selectModeDeselect: "Deselect<br>Mode",
    selectModeSelect: "Select<br>Mode",
    selectAll: "Select<br>All",
  },
  landing: {
    welcomeTitle: "Welcome to ArisuTalk",
    welcomeMessage:
      "This is a space where you can freely chat with your own AI characters. Select a character from the sidebar or create a new one to start a conversation.",
    newCharacterButton: "New Character",
    selectCharacterButton: "Select Character",
  },
  security: {
    masterPasswordPlaceholder: "Enter a secure master password",
    confirmPasswordPlaceholder: "Re-enter password",
    passwordHintPlaceholder: "Hint to help you remember the password",
    encryptionFailed: "Encryption failed",
    decryptionFailed: "Decryption failed. Please check your password.",
    passwordTooShort:
      "Password must be at least {{minLength}} characters long.",
    passwordNotComplex:
      "Password must contain at least 3 of the following: uppercase, lowercase, numbers, special characters.",
    passwordStrong: "Strong password.",
    encryptionSetupTitle: "API Key Encryption Setup",
    encryptionSetupDescription:
      "Set up encryption to securely protect your API keys.",
    whyEncryptionIsNeeded: "Why is encryption needed?",
    encryptionBenefit1:
      "• API keys are not exposed in plain text in the browser",
    encryptionBenefit2: "• Protects API keys from malicious extensions",
    encryptionBenefit3: "• Securely protects API keys from XSS attacks",
    masterPasswordLabel: "Master Password",
    confirmPasswordLabel: "Confirm Password",
    passwordHintLabel: "Password Hint (optional)",
    passwordHintWarning:
      "The hint is not encrypted, so do not include the password itself.",
    generateSecurePassword: "Generate a secure password automatically",
    setupEncryption: "Setup Encryption",
    enterMasterPassword: "Please enter a master password.",
    passwordsDoNotMatch: "Passwords do not match.",
    encryptionEnabledSuccess: "API key encryption has been enabled!",
    generatedPasswordMessage:
      "Generated Master Password:\n\n${password}\n\nPlease save this password in a safe place!",
    passwordStrength: {
      veryWeak: "Very Weak",
      weak: "Weak",
      medium: "Medium",
      strong: "Strong",
      label: "Password Strength: ",
    },
  },
  secureStorage: {
    autoGeneratedHint: "Auto-generated for security",
    setupEncryptionFailed: "Failed to setup encryption.",
    noMasterPasswordForEncryption:
      "No master password available for encryption",
    saveApiConfigsFailed: "Failed to save API settings.",
    noMasterPasswordForDecryption:
      "No master password available for decryption",
    loadApiConfigsFailed: "Failed to load encrypted API configs:",
  },
  search: {
    prompt: "Search for characters by name.",
    noResults: "No characters found.",
  },
  generatingStatus: {
    generating: "Generating...",
  },
  hypnosis: {
    hypnosisControl: "Hypnosis Control",
    enabled: "Hypnosis mode enabled",
    disabled: "Hypnosis mode disabled",
    affectionControl: "Affection Control",
    intimacyControl: "Intimacy Control",
    trustControl: "Trust Control",
    romanceControl: "Romance Control",
    forceLoveUnlock: "Force Love Mode",
    snsFullAccess: "Full SNS Access",
    secretAccountAccess: "Secret Account Access",
    currentLevel: "Current level: {{level}}%",
    override: "Hypnosis Override",
    naturalValue: "Natural value: {{level}}%",
    hypnosisValue: "Hypnosis value: {{level}}%",
    settingsWarning: "Hypnosis control overrides character's natural emotions",
    dangerousFeature: "⚠️ This feature may interfere with natural story progression"
  },
  sns: {
    characterListTitle: "Character List",
    accessDenied: "Access denied. Please increase your affection level.",
    createPost: "Create Post",
    editPost: "Edit Post",
    likes: "Likes",
    comments: "Comments",
    secretAccount: "Secret Account",
    mainAccount: "Main Account",
    secretAccountWarning: "This is a secret account post",
    selectedSticker: "Selected Sticker",
    changeSticker: "Change Sticker",
    selectSticker: "Select Sticker",
    noStickers: "No stickers available",
    postPlaceholder: "What's on your mind?",
    posts: "Posts",
    secrets: "Secrets",
    tags: "Tags",
    postsTab: "Posts",
    secretsTab: "Secrets",
    tagsTab: "Tags",
    addTag: "Add Tag",
    tagsDescription: "Frequently used tags by this character",
    postsCount: "{{count}} posts",
    noPostsYet: "No posts yet",
    noSecretsYet: "No secrets yet", 
    noTagsYet: "No tags yet",
    noPostsAvailable: "No posts available",
    noSecretsAvailable: "No secrets available",
    noTagsAvailable: "No tags available",
    lockedContent: "🔒 A deeper relationship is needed to view this content",
    accessLevel: "Access Level",
    mainPublic: "Main Public",
    mainPublicDesc: "Visible to all users",
    mainPrivate: "Main Private",
    mainPrivateDesc: "Visible to users with high affection",
    secretPublic: "Secret Public",
    secretPublicDesc: "Visible to users with secret account access",
    secretPrivate: "Secret Private",
    secretPrivateDesc: "Visible to users with very high affection",
    importance: "Importance",
    justNow: "just now",
    minutesAgo: "{{minutes}}m ago",
    hoursAgo: "{{hours}}h ago",
    daysAgo: "{{days}}d ago",
    weeksAgo: "{{weeks}}w ago",
    monthsAgo: "{{months}}mo ago",
    characterList: {
      searchPlaceholder: "Search by character name...",
      availableCharacters: "Available Characters",
      noAccessCharacters: "No Access Characters",
      affectionLevel: "Affection: {{level}}%",
      intimacyLevel: "Intimacy: {{level}}%",
      trustLevel: "Trust: {{level}}%",
      romanceLevel: "Romance: {{level}}%"
    },
    accessDeniedDescription: "Higher affection is required to view this content.",
    requiresAffection: "Requires {{level}}% affection",
    requiresIntimacy: "Requires {{level}}% intimacy",
    requiresTrust: "Requires {{level}}% trust",
    requiresRomance: "Requires {{level}}% romance",
    backToMain: "Back to Main Account",
    affection: "Affection",
    intimacy: "Intimacy",
    trust: "Trust",
    romanticInterest: "Romance",
    openSNSList: "View SNS List",
    viewSNS: "View {{name}}'s SNS"
  },
};
